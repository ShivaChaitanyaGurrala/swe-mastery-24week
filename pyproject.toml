[project]
name = "swe-mastery-24week"
version = "0.1.0"
description = ""
authors = [
    {name = "Shiva Chaitanya Gurrala",email = "shivagurrala1@gmail.com"}
]
readme = "README.md"
requires-python = ">=3.13"
dependencies = [
    "fastapi (>=0.115.12,<0.116.0)",
    "uvicorn[standard] (>=0.34.3,<0.35.0)",
    "sqlalchemy (>=2.0.41,<3.0.0)",
    "psycopg2-binary (>=2.9.10,<3.0.0)",
    "redis (>=6.2.0,<7.0.0)",
    "pymongo (>=4.13.0,<5.0.0)",
    "httpx (>=0.28.1,<0.29.0)",
    "requests (>=2.32.4,<3.0.0)",
    "beautifulsoup4 (>=4.13.4,<5.0.0)",
    "streamlit (>=1.45.1,<2.0.0)",
    "plotly (>=6.1.2,<7.0.0)",
    "pandas (>=2.3.0,<3.0.0)",
    "numpy (>=2.3.0,<3.0.0)",
    "pydantic (>=2.11.5,<3.0.0)",
    "typer (>=0.16.0,<0.17.0)",
    "rich (>=14.0.0,<15.0.0)",
]

[tool.poetry]
packages = [{include = "swe_mastery_24week", from = "src"}]


[tool.poetry.group.dev.dependencies]
pytest = "^8.4.0"
pytest-cov = "^6.1.1"
pytest-asyncio = "^1.0.0"
pytest-mock = "^3.14.1"
black = "^25.1.0"
mypy = "^1.16.0"
ruff = "^0.11.13"
pre-commit = "^4.2.0"
bandit = "^1.8.3"
sphinx = "^8.2.3"
mkdocs = "^1.6.1"
mkdocs-material = "^9.6.14"

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"


# === Tool Configurations ===

[tool.black]
line-length = 88
target-version = ['py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  \.eggs
  | \.git
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.mypy]
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_untyped_decorators = false
disallow_incomplete_defs = true
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
ignore_missing_imports = true
explicit_package_bases = true
namespace_packages = true
exclude = [
    "build/",
    "dist/",
    "venv/",
    ".venv/",
]

[tool.ruff]
target-version = "py312"
line-length = 88

exclude = [
    ".git",
    ".mypy_cache",
    ".ruff_cache",
    ".venv",
    "__pycache__",
]


[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]


[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "e2e: marks tests as end-to-end tests",
    "security: marks tests as security tests",
]

[tool.coverage.run]
source = ["swe_mastery_24week"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/conftest.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == '__main__':",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.bandit]
exclude_dirs = ["tests"]
skips = ["B101", "B601"]
